@using Microsoft.AspNetCore.Mvc.ViewFeatures
@{
    var links = ViewData["Links"] as List<dynamic>;
}

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" />

<link rel="stylesheet" href="~/css/Componentes/Menu-hamburger/menuHamburguer.css" />

<div class="menu-wrap" id="menu-hamburguer">
    <input type="checkbox" class="toggler">
    <div class="hamburger"><div></div></div>
    <div class="menu">
        <div>
            <div class="flex-menu-hamburger">
                <ul class="ul-hamburger">
                    @if (links != null)
                    {
                        foreach (var link in links)
                        {
                            if (link.SubLinks != null && link.SubLinks.Count > 0)
                            {
                                <li>
                                    <button type="button" class=" button-hamburguer accordion-botao">
                                        <div class="flex-submenu-title">
                                            <span>@link.Texto</span>
                                        </div>
                                        <svg class="w-3 h-3 accordion-arrow" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4" />
                                        </svg>
                                    </button>
                                    <ul class="accordion-content overflow-hidden max-h-0 transition-all duration-300 ease-in-out" style="padding-left:0vw">
                                        @foreach (var sub in link.SubLinks)
                                        {
                                            <li>
                                                <a href="@sub.Url" class=" flex-links-items gap-[1vw]">
                                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" class="h-3 w-5">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
                                                    </svg>
                                                    <span>@sub.Texto</span>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                            else
                            {
                                <li><a href="@link.Url">@link.Texto</a></li>
                            }
                        }
                    }
                </ul>

            </div>
        </div>
    </div>
</div>
