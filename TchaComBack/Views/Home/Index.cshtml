@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="~/css/Home/home.css">
<script src="~/js/Home/home.js" defer></script>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">


<section>
    @if (TempData["MensagemSucesso"] != null)
    {
        <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 9999;">
            <div class="toast align-items-center text-bg-success border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <strong>Sucesso!</strong> @TempData["MensagemSucesso"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
    }

    @if (TempData["MensagemErro"] != null)
    {
        <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 9999;">
            <div class="toast align-items-center text-bg-danger border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <strong>Atenção!</strong> @TempData["MensagemErro"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
    }

    <section class="container-home">
        <article class="seja-bemvindo-home">
            <h1>Seja Bem-vindo <span class="home-nomebemvindo">@ViewBag.nomeCompleto!</span> </h1>
            <p>Explore seus dados com facilidade e agilidade.</p>
        </article>
        <article class="box-one-home">
            <article class="card-destaque-box-one">
                <div class=" card-dias-trabalhados">
                    <div class="card-body destaque">
                        <div class="flex-card-body-text-destaque">
                            <div class="flex-icon-destaque">
                                <i class="bi bi-calendar-date-fill"></i>
                            </div>
                            <div class="flex-card-body-text-destaque-two">
                                <h5 class="card-title">Dias Trabalhados Acumulados</h5>
                                <p class="card-text">@Model.TotalDiasTrabalhados dias registrados</p>

                            </div>

                        </div>
                    </div>
                 
                    <div class="flex-graficoDiasTrabalhados">
                        <canvas id="idGraficoDiasTrabalhados"></canvas>
                    </div>
                </div>
            </article>
            <article class="flex-card-horas-faltas">
                <div class="card card-horas-faltas">
                    <div class="card-body">
                        <div>
                            <div class="flex-card-body-text-one">
                                <div class="flex-icon-secondary">
                                    <i class="bi bi-clock-fill"></i>
                                </div>
                                <div class="flex-card-body-text-two">
                                    <h5 class="card-title ">Horas Faltas Acumuladas</h5>
                                    <p class="card-text negativo">@Model.TotalHorasFaltasFormatado</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card card-horas-faltas">
                    <div class="card-body">
                        <div class="flex-card-body-text-one">
                            <div class="flex-icon-secondary">
                                <i class="bi bi-clock-fill"></i>
                            </div>
                            <div class="flex-card-body-text-two">
                                <h5 class="card-title ">Horas Extras Acumuladas</h5>
                                <p class="card-text  positivo">@Model.TotalHorasExtrasFormatado</p>
                            </<div>
                        </div>
                    </div>
                </div>
            </article>
          
        </article>
        <article class="box-two-home">
            <article class="sub-box-home">
                <div class="flex-cabecalho-box-two">
                    <h2>Graficos Horas Extras X Horas Faltas</h2>
                    <p>Acompanhe a análise visual das batidas concedidas e ausências registradas — uma visão clara e dinâmica .</p>
                </div>
                <div>
                    <canvas id="idGraficoHorasExtrasxHorasFaltas"></canvas> 
                </div>
            </article>
        </article>
        <div class="flex-graficos">
            <article class="box-two-home">
                <article class="sub-box-home">
                    <div class="flex-cabecalho-box-two">
                        <h2>Graficos Horas Faltas</h2>                        
                        <p>Veja a análise visual das Hora Faltas mês a mês.</p>
                    </div>
                    <div>
                        <canvas id="idGraficoHorasFaltas"></canvas>
                    </div>
                </article>
            </article>
            <article class="box-two-home">
                <article class="sub-box-home">
                    <div class="flex-cabecalho-box-two">
                        <h2>Graficos Horas Extras</h2>
                        <p>Veja a análise visual das Hora Extras mês a mês.</p>
                    </div>
                    <div>
                        <canvas id="idGraficoHorasExtras"></canvas>
                    </div>
                </article>
            </article>
        </div>
        <div class="flex-graficos">
            <article class="box-two-home">
                <article class="sub-box-home">
                    <div class="flex-cabecalho-box-two">
                        <h2>Raanking Dias Horas Faltas</h2>
                        <p>Visualize os dias que concentraram o maior número de horas de ausência.</p>
                    </div>
                    <div>
                        <canvas id="idGraficoBarrasLaterais"></canvas>
                    </div>
                </article>
            </article>
            <article class="box-two-home">
                <article class="sub-box-home">
                    <div class="flex-cabecalho-box-two">
                        <h2>Justificativas</h2>
                        <p>Confira quais são as justificativas mais recorrentes registradas.</p>
                    </div>
                    <div>
                        <canvas id="idGraficoJustificativas"></canvas>
                    </div>
                </article>
            </article>
        </div>

    </section>
</section>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>

<script src="~/js/Home/graficosHorasExtrasxHorasFaltas.js"></script>
<script src="~/js/Home/graficoHorasFaltas.js"></script>
<script src="~/js/Home/graficoHorasExtra.js"></script>
<script src="~/js/Home/graficoQuantidadeHorasFaltasDiasDaSemana.js"></script>
<script src="~/js/Home/graficoJustificativas.js"></script>
<script src="~/js/Home/graficoDiasTrabalhadosPorMes.js"></script>

<script id="dadosGraficos" type="application/json">
    {
        "labelsSetores": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.NomesSetores)),
        "dataHorasExtras": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.QuantidadeHorasExtras)),
        "dataHorasFaltas": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.QuantidadeHorasFaltas)),
        "labelsHorasExtrasFormatadas": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsHorasExtrasFormatadas)),
        "labelsHorasFaltasFormatadas": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsHorasFaltasFormatadas)),

        "labelsMesesHorasFaltas": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsMesesHorasFaltas)),
        "dataHorasFaltasPorMes": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.QuantidadeHorasFaltasPorMes)),
        "labelsHorasFaltasPorMesFormatadas": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsHorasFaltasPorMesFormatadas)),


        "labelsMesesHorasExtras": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsMesesHorasExtras)),
        "dataHorasExtrasPorMes": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.QuantidadeHorasExtrasPorMes)),
        "labelsHorasExtrasPorMesFormatadas": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsHorasExtrasPorMesFormatadas)),



        "labelsDiasSemana": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsDiasSemana)),
        "dataHorasFaltasPorDia": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.QuantidadeHorasFaltasPorDia)),
        "labelsHorasFaltasPorDiaFormatadas": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsHorasFaltasPorDiaFormatadas)),

         "labelsJustificativas": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsJustificativas)),
         "dataOcorrenciasPorJustificativa": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.QuantidadeOcorrenciasPorJustificativa)),

        "labelsMesesDiasTrabalhados": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LabelsDiasTrabalhadosPorMes)),
    "dataDiasTrabalhadosPorMes": @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TotalDiasTrabalhadosPorMes))
    }
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const toastElList = [].slice.call(document.querySelectorAll('.toast'));
        toastElList.forEach(function (toastEl) {
            const bsToast = new bootstrap.Toast(toastEl, { delay: 5000 });
            bsToast.show();
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                new bootstrap.Tooltip(tooltipTriggerEl)
            })
        });
</script>
