@model SetoresViewModel
@{
    ViewData["Title"] = "Setores";
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/Setores/setores.css">

    <title>Setores</title>
</head>
<body>

    @if (TempData["MensagemSucesso"] != null)
    {
        <div id="successAlert" class="custom-alert success">
            <span><strong>Sucesso!</strong> @TempData["MensagemSucesso"]</span>
            <span class="closebtn" onclick="closeAlert('successAlert')">&times;</span>
        </div>
    }

    @if (TempData["MensagemErro"] != null)
    {
        <div id="errorAlert" class="custom-alert error">
            <span><strong>Atenção!</strong> @TempData["MensagemErro"]</span>
            <span class="closebtn" onclick="closeAlert('errorAlert')">&times;</span>
        </div>
    }

    @{
        var quantidadeFunc = Model.QuantidadePorSetor;
        var categorias = Model.Categorias;
        var setores = Model.Setores;
        var possuiCategorias = Model.Categorias != null && Model.Categorias.Any();
        var possuiSetores = Model.Setores != null && Model.Setores.Any();
        var setoresDisponiveis = Model.Setores != null && Model.Setores.Any(s => s.Ativo == 'S');


    }

    @functions {
        public string LimitarTexto(string texto, int limite)
        {
            if (string.IsNullOrEmpty(texto))
                return string.Empty;

            if (texto.Length > limite)
                return texto.Substring(0, limite) + "...";

            return texto;
        }
    }
    @if (possuiSetores || possuiCategorias)
    {
        <section class="sessao-setores">

            @if (!setoresDisponiveis)
            {
                <div class="flex-mensagem-inativo">
                    <div class="box-mensegem-inativo">
                        <h1>Nenhum Setor Inativo Disponível</h1>
                        <p>Infelizmente, não há setores inativos no momento. Por favor, verifique novamente mais tarde ou entre em contato com o administrador para obter mais informações.</p>
                        <partial name="~/Views/Componentes/Botao-Primario/BotaoPrimario.cshtml" view-data=@(new ViewDataDictionary(ViewData){
                         { "Texto", "Voltar a Sessão" },
                         { "Url", "/Setores" },
                         { "ClasseExtra", "" },
                         { "Id", "" },
                         { "Type", "" },
                         { "elemento", "a"}
                         }) />
                    </div>
                </div>
            }
            else
            {
                <form asp-controller="Setores" asp-action="Index" method="get" class="form-inline mb-4 text-center filtro p-4 border-2 border-gray-200 border-dashed rounded-lg dark:border-gray-700" id="id-filtro">
                    <h1>Setores</h1>
                    <div class="flex-filtro">
                        <div class="flex-input-group filtro-content">
                            <div class="input-group">
                                <p>Categorias</p>
                                <div class="mb-2 mr-sm-2 text-left selected">
                                    @Html.DropDownList(
                                             "categoriaId",
                                             ViewBag.CategoriasOpcoes as SelectList,
                                             "Todas as Categorias",
                                             new { @class = "form-select selected" }
                                             )
                                </div>
                            </div>
                            <div class="input-group">
                                <p>Status</p>
                                <div class="mb-2 mr-sm-2 text-left selected">
                                    @Html.DropDownList(
                                             "ativo",
                                             ViewBag.StatusOpcoes as SelectList,
                                             "Todos",
                                             new { @class = "form-select selected" }
                                             )
                                </div>
                            </div>
                        </div>
                        <div class="flex-input-two filtro-content">
                            <input type="text" name="searchString" value="@ViewBag.SearchString" class="form-control mb-2 mr-sm-2" placeholder="Buscar setor..." />
                            <a type="button" class="botao-adicionar mb-2" style="color:white;" data-bs-toggle="modal" data-bs-target="#modalCadastrarSetor">
                                +
                            </a>
                            <partial name="~/Views/Componentes/Botao-Primario/BotaoPrimario.cshtml" view-data=@( new ViewDataDictionary(ViewData){
                             { "Texto", "Filtrar" },
                             { "Url", "/Login" },
                             { "ClasseExtra", "btn btn-filtrar mb-2 btn-filtrar" },
                             { "Id", "" },
                             { "Type", "submit" },
                             { "elemento", "Button"}
                             }) />
                        </div>
                        @*                         <button type="button" class="btn-fechar" id="toggle-filtro">˄</button>
 *@                    </div>
                </form>
                <partial name="~/Views/Componentes/Carrossel-Setores/CarrosselSetores.cshtml" />
            }

        </section>

        <partial name="Cadastrar" model="new SetoresModel()" />
        <partial name="Editar" model="new SetoresModel()" />
    }
    else
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }

    <!-- modal desativar setor -->
    <div class="modal fade" id="modalDesativarSetor" tabindex="-1" aria-labelledby="modalDesativarSetorLabel" aria-hidden="true" style="z-index:100000001;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-black" id="modalDesativarSetorLabel" style="font-weight:bold">Desativar Setor</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-black">
                    Tem certeza que deseja desativar o setor <span id="modalUserName"></span>?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <a id="confirmDesativeButton" role="button" class="btn btn-danger">Desativar</a>
                </div>
            </div>
        </div>
    </div>

    <!-- modal reativar setor -->
    <div class="modal fade" id="modalReativarSetor" tabindex="-1" aria-labelledby="modalReativarSetorLabel" aria-hidden="true" style="z-index:100000001;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-black" id="modalReativarSetorLabel" style="font-weight:bold">Reativar Setor</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-black">
                    Tem certeza que deseja Reativar o setor <span id="modalUserNameReativo"></span>?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <a id="confirmReativeButton" role="button" class="btn btn-primary">Reativar</a>
                </div>
            </div>
        </div>
    </div>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
        document.addEventListener("click", function (event) {
            if (event.target.matches("[data-bs-target='#modalDesativarSetor']")) {
                var button = event.target;
                var setorId = button.getAttribute('setor-id');
                var setorName = button.getAttribute('setor-nome');
                var modalUserName = document.getElementById('modalUserName');
                var confirmDesativeButton = document.getElementById('confirmDesativeButton');

                if (modalUserName && setorName) {
                    modalUserName.textContent = setorName;
                }
                if (confirmDesativeButton && setorId) {
                    confirmDesativeButton.href = '/Setores/Desativar/' + setorId;
                }
            }
        });

        document.addEventListener("click", function (event) {
            if (event.target.matches("[data-bs-target='#modalReativarSetor']")) {
                var button = event.target;
                var setorIdReativo = button.getAttribute('data-id');
                var setorNome = button.getAttribute('data-nome');
                var modalUserNameReativo = document.getElementById('modalUserNameReativo');
                var confirmReativeButton = document.getElementById('confirmReativeButton');

                if (modalUserNameReativo && setorNome) {
                    modalUserNameReativo.textContent = setorNome;
                }
                if (confirmReativeButton && setorIdReativo) {
                    confirmReativeButton.href = '/Setores/Reativar/' + setorIdReativo;
                }
            }
        });
        });
    </script>

</body>
</html>